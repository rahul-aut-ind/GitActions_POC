# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI with Java Spring Boot repo, maven build tool, packaging & pushing as image to ECR, Testing & pushing to EKS

# Events
on:
  push:
    branches: [ CI-GITACTIONS ]
  pull_request:
    branches: [ CI-GITACTIONS ]

# Workflow defination
jobs: # different jobs run parallelly by default. To make it sequencial, need to inject dependancy
  build: # this is a name of the job
    # Ubuntu has docker pre installed so we can directly run docker commands from run action
    runs-on: ubuntu-latest

    steps: 
    # dash - defines a step 

      # checks out the repo
    - name: Checkout
      uses: actions/checkout@v2
#       with:
#         fetch-depth: 0
      # versioning
    - name: Application Version
      id: version
      uses: paulhatch/semantic-version@v4.0.1
      with:
        #tag_prefix: "v"
        #change_path: "tfw-web/src"
        bump_each_commit: true
        short_tags: false
        format: "v${major}.${minor}.${patch}-prerelease${increment}"
        
    - name: Print new semantic build number
      run: echo ${{ steps.version.outputs.version }}
        
#     - name: Generate build number
#       uses: einaregilsson/build-number@v3
#       with:
#         token: ${{secrets.github_token}}    
        
#     - name: Print new build number
#       run: echo "Build number is $BUILD_NUMBER"

#     - name: Set up JDK 1.8
#       uses: actions/setup-java@v1
#       with:
#         java-version: 1.8

#     - name: Build and Package with Maven
#       working-directory: tfw-web/
#       run: mvn clean package -Dproject.version=${BUILD_NUMBER} -U -f pom.xml

    # - name: SonarQube Scan
    #   uses: kitabisa/sonarqube-action@v1.1.0
    #   with:
    #     host: ${{ secrets.SONARQUBE_HOST }}
    #     login: ${{ secrets.SONARQUBE_TOKEN }}
    #     projectBaseDir: "/path/to/my-custom-project"
    #     projectKey: "tfw-web-QA"
    #     projectName: "my-custom-project-name"
    #     projectVersion: ${{id}}




  # publish: # this is a name of the job
    
  #   runs-on: ubuntu-latest

  #   steps: 
  #   # dash - defines a step 

  #   - name: Set up JDK 1.8
  #     uses: actions/setup-java@v1
  #     with:
  #       java-version: 1.8
